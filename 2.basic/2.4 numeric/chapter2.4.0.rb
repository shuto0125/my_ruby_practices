### 数値

# 数値には_を含めることができます。
# _は無視されるので、大きな数の区切り文字として使うと便利です。

p 1_000_000_000

# 変数の手前に-をつけると、数値の正と負を反転できます。

n = 1
p -n #=> -1

# 整数の割り算は整数になりますので注意してください。
# 小数点以下が切り捨てられます。

p 1/2 #=>0

# 小数点以下の値が必要名場合は、どちらかの値に小数点の.0をつけます。
p 1.0 / 2 #=> 0.5

p 1 / 2.0 #=> 0.5


# 変数に整数が入っている場合は、
# to_fメソッドを呼ぶことで整数から少数に変更することができます。
n = 1
p n.to_f
p n.to_f / 2

# %は余り、 **は冪乗を求める演算子です。

p 8 % 3 #=> 2
p 2 ** 10 #=> 1024



# 丸め誤差に注意！

p 0.1 * 3.0 #=> 0.30000000000000004
# コンピュータが10進数ではなく2進数で計算しているから起こること。

# Rational クラスを使うと少数ではなく[10分の3]という計算結果が返る。
puts 0.1r * 3.0r #=> 3/10
puts 0.1r * 3.0r == 0.3 #=> true

